--- st.c
+++ st.c
@@ -33,7 +33,6 @@
 #define UTF_SIZ       4
 #define ESC_BUF_SIZ   (128*UTF_SIZ)
 #define ESC_ARG_SIZ   16
-#define CAR_PER_ARG   4
 #define STR_BUF_SIZ   ESC_BUF_SIZ
 #define STR_ARG_SIZ   ESC_ARG_SIZ
 
@@ -140,7 +139,6 @@ typedef struct {
 	int arg[ESC_ARG_SIZ];
 	int narg;              /* nb of args */
 	char mode[2];
-	int carg[ESC_ARG_SIZ][CAR_PER_ARG]; /* colon args */
 } CSIEscape;
 
 /* STR Escape sequence structs */
@@ -161,7 +159,6 @@ static void ttywriteraw(const char *, size_t);
 
 static void csidump(void);
 static void csihandle(void);
-static void readcolonargs(char **, int, int[][CAR_PER_ARG]);
 static void csiparse(void);
 static void csireset(void);
 static int eschandle(uchar);
@@ -1134,28 +1131,6 @@ tnewline(int first_col)
 	tmoveto(first_col ? 0 : term.c.x, y);
 }
 
-void
-readcolonargs(char **p, int cursor, int params[][CAR_PER_ARG])
-{
-	int i = 0;
-	for (; i < CAR_PER_ARG; i++)
-		params[cursor][i] = -1;
-
-	if (**p != ':')
-		return;
-
-	char *np = NULL;
-	i = 0;
-
-	while (**p == ':' && i < CAR_PER_ARG) {
-		while (**p == ':')
-			(*p)++;
-		params[cursor][i] = strtol(*p, &np, 10);
-		*p = np;
-		i++;
-	}
-}
-
 void
 csiparse(void)
 {
@@ -1178,7 +1153,6 @@ csiparse(void)
 			v = -1;
 		csiescseq.arg[csiescseq.narg++] = v;
 		p = np;
-		readcolonargs(&p, csiescseq.narg-1, csiescseq.carg);
 		if (*p != ';' || csiescseq.narg == ESC_ARG_SIZ)
 			break;
 		p++;
@@ -1395,10 +1369,6 @@ tsetattr(int *attr, int l)
 				ATTR_STRUCK     );
 			term.c.attr.fg = defaultfg;
 			term.c.attr.bg = defaultbg;
-			term.c.attr.ustyle = -1;
-			term.c.attr.ucolor[0] = -1;
-			term.c.attr.ucolor[1] = -1;
-			term.c.attr.ucolor[2] = -1;
 			break;
 		case 1:
 			term.c.attr.mode |= ATTR_BOLD;
@@ -1410,14 +1380,7 @@ tsetattr(int *attr, int l)
 			term.c.attr.mode |= ATTR_ITALIC;
 			break;
 		case 4:
-			term.c.attr.ustyle = csiescseq.carg[i][0];
-
-			if (term.c.attr.ustyle != 0)
-				term.c.attr.mode |= ATTR_UNDERLINE;
-			else
-				term.c.attr.mode &= ~ATTR_UNDERLINE;
-
-			term.c.attr.mode ^= ATTR_DIRTYUNDERLINE;
+			term.c.attr.mode |= ATTR_UNDERLINE;
 			break;
 		case 5: /* slow blink */
 			/* FALLTHROUGH */
@@ -1468,18 +1431,6 @@ tsetattr(int *attr, int l)
 		case 49:
 			term.c.attr.bg = defaultbg;
 			break;
-		case 58:
-			term.c.attr.ucolor[0] = csiescseq.carg[i][1];
-			term.c.attr.ucolor[1] = csiescseq.carg[i][2];
-			term.c.attr.ucolor[2] = csiescseq.carg[i][3];
-			term.c.attr.mode ^= ATTR_DIRTYUNDERLINE;
-			break;
-		case 59:
-			term.c.attr.ucolor[0] = -1;
-			term.c.attr.ucolor[1] = -1;
-			term.c.attr.ucolor[2] = -1;
-			term.c.attr.mode ^= ATTR_DIRTYUNDERLINE;
-			break;
 		default:
 			if (BETWEEN(attr[i], 30, 37)) {
 				term.c.attr.fg = attr[i] - 30;
